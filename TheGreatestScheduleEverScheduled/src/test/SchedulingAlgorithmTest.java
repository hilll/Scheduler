package test;

import static org.junit.Assert.*;

import org.junit.Test;

import model.Business;
import model.Employee;
import model.Schedule;

public class SchedulingAlgorithmTest {
	
	private String[] availWeekdayMornings = {
			"000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
			"111111111111111111111111111111111111111111111111111111111111111111000000000000000000000000000000",
			"111111111111111111111111111111111111111111111111111111111111111111000000000000000000000000000000",
			"111111111111111111111111111111111111111111111111111111111111111111000000000000000000000000000000",
			"111111111111111111111111111111111111111111111111111111111111111111000000000000000000000000000000",
			"111111111111111111111111111111111111111111111111111111111111111111000000000000000000000000000000",
			"000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" };
	private String[] availWeekdayEvenings = {
			"000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
			"000000000000000000000000000000000000000000000000000000000011111111111111111111111111111111111111",
			"000000000000000000000000000000000000000000000000000000000011111111111111111111111111111111111111",
			"000000000000000000000000000000000000000000000000000000000011111111111111111111111111111111111111",
			"000000000000000000000000000000000000000000000000000000000011111111111111111111111111111111111111",
			"000000000000000000000000000000000000000000000000000000000011111111111111111111111111111111111111",
			"000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" };
	private String[] availAllTheTime = {
			"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
			"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
			"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
			"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
			"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
			"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
			"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111" };
	private String[] availWeekends = {
			"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
			"000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
			"000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
			"000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
			"000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
			"000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
			"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111" };

	@Test
	public void test() {
		Business b = new Business(1, "Starbucks");
		Employee katie = new Employee(0, "Katie", "Walters", "katieew@gmail.com", availWeekdayMornings, true);
		Employee james = new Employee(1, "James", "Gauges", "jGauges@gmail.com", availWeekdayEvenings, true);
		Employee cj = new Employee(2, "CJ", "Talksalot", "cjtalk@gmail.com", availWeekends, false);
		Employee ash = new Employee(3, "Ash", "Catchem", "gottacatchemall@gmail.com", availAllTheTime, false);
		Employee paw = new Employee(4, "Paw", "Penguin", "pawbert@gmail.com", availWeekdayEvenings, false);
		Employee filip = new Employee(4, "Filip", "Whitaire", "puffer@gmail.com", availWeekdayMornings, false);
		
		katie.setBusiness(b);
		james.setBusiness(b);
		cj.setBusiness(b);
		ash.setBusiness(b);
		paw.setBusiness(b);
		filip.setBusiness(b);
		
		// weekend shifts - two non-managers, all day
		b.createShift(0, 28, 60, false);
		b.createShift(0, 28, 60, false);
		b.createShift(6, 28, 60, false);
		b.createShift(6, 28, 60, false);
		
		//weekday shifts - morning and evening manager with morning and evening employee plus one midday overlap employee
		for (int i = 1; i < 6; i++) {
			b.createShift(i, 24, 62, true);
			b.createShift(i, 24, 62, false);
			b.createShift(i, 62, 95, true);
			b.createShift(i, 62, 95, false);
			b.createShift(i, 44, 76, false);
		}
		
		System.out.println("Before generating anything: \n Master Schedule: \n" + b.getMasterSchedule().toString());
		System.out.println("Current Schedule: \n" + b.getCurrentSchedule().toString());
		
		Schedule newSched = b.generateNewSchedule();
		
		System.out.println("After generating: \n Master Schedule: \n" + b.getMasterSchedule().toString());
		System.out.println("Current Schedule: \n" + b.getCurrentSchedule().toString());
		
		assertEquals(b.getCurrentSchedule().toString(), newSched.toString());
	}

}
